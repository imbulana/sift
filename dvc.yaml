artifacts:
  news-dataset:
    path: data/collated/data.csv
    type: dataset
    desc: Preprocessed fake/real news dataset
  text-classification:
    path: model.pkl
    desc: Classify whether the given article is real or fake
    type: model
    labels:
      - nlp
      - classification
      - news
stages:

  # sources not redacted

  # clean:
  #   cmd: python3 src/prepare/clean.py data/raw
  #   deps:
  #     - data/raw
  #     - src/prepare/clean.py
  #   outs:
  #     - data/cleaned
  # collate:
  #   cmd: python3 src/prepare/collate.py data/cleaned
  #   deps:
  #     - data/cleaned
  #     - src/prepare/collate.py
  #   params:
  #     - prepare.seed
  #   outs:
  #     - data/collated/data.csv

  # sources redacted

  clean:
    cmd: python3 src/prepare/clean.py data/raw
    deps:
      - data/raw
      - src/prepare/clean.py
    outs:
      - data/cleaned
  redact:
    cmd: python3 src/prepare/redact.py data/cleaned
    deps:
      - data/cleaned
      - src/prepare/redact.py
    outs:
      - data/redacted
  collate:
    cmd: python3 src/prepare/collate.py data/redacted
    deps:
      - data/redacted
      - src/prepare/collate.py
    params:
      - prepare.seed
    outs:
      - data/collated/data.csv

  split:
    cmd: python3 src/prepare/split.py data/collated/data.csv
    deps:
      - data/collated/data.csv
      - src/prepare/split.py
    params:
      - prepare.seed
      - prepare.split
    outs:
      - data/prepared
  featurize:
    cmd: python3 src/featurize.py data/prepared data/features
    deps:
      - data/prepared
      - src/featurize.py
    params:
      - featurize.max_features
      - featurize.ngrams
    outs:
      - data/features
  train:
    cmd: python3 src/train.py data/features model.pkl
    deps:
      - data/features
      - src/train.py
    params:
      - train.min_split
      - train.n_est
      - train.seed
    outs:
      - model.pkl
      - models/random_forest
  evaluate:
    cmd: python3 src/evaluate.py model.pkl data/features
    deps:
      - data/features
      - model.pkl
      - models/random_forest
      - src/evaluate.py
    outs:
      - eval
metrics:
  - eval/metrics.json
plots:
  - ROC:
      template: simple
      x: fpr
      y:
        eval/plots/sklearn/roc/train.json: tpr
        eval/plots/sklearn/roc/test.json: tpr
  - Confusion-Matrix:
      template: confusion
      x: actual
      y:
        eval/plots/sklearn/cm/train.json: predicted
        eval/plots/sklearn/cm/test.json: predicted
  - Precision-Recall:
      template: simple
      x: recall
      y:
        eval/plots/sklearn/prc/train.json: precision
        eval/plots/sklearn/prc/test.json: precision
  - eval/plots/images/importance.png
